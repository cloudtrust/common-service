// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudtrust/common-service/v2/middleware (interfaces: KeycloakClient,IDRetriever,AdminConfigurationRetriever)
//
// Generated by this command:
//
//	mockgen --build_flags=--mod=mod -destination=./mock/keycloak_client.go -package=mock -mock_names=KeycloakClient=KeycloakClient,IDRetriever=IDRetriever,AdminConfigurationRetriever=AdminConfigurationRetriever github.com/cloudtrust/common-service/v2/middleware KeycloakClient,IDRetriever,AdminConfigurationRetriever
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	configuration "github.com/cloudtrust/common-service/v2/configuration"
	gomock "go.uber.org/mock/gomock"
)

// KeycloakClient is a mock of KeycloakClient interface.
type KeycloakClient struct {
	ctrl     *gomock.Controller
	recorder *KeycloakClientMockRecorder
	isgomock struct{}
}

// KeycloakClientMockRecorder is the mock recorder for KeycloakClient.
type KeycloakClientMockRecorder struct {
	mock *KeycloakClient
}

// NewKeycloakClient creates a new mock instance.
func NewKeycloakClient(ctrl *gomock.Controller) *KeycloakClient {
	mock := &KeycloakClient{ctrl: ctrl}
	mock.recorder = &KeycloakClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *KeycloakClient) EXPECT() *KeycloakClientMockRecorder {
	return m.recorder
}

// VerifyToken mocks base method.
func (m *KeycloakClient) VerifyToken(issuer, realmName, accessToken string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyToken", issuer, realmName, accessToken)
	ret0, _ := ret[0].(error)
	return ret0
}

// VerifyToken indicates an expected call of VerifyToken.
func (mr *KeycloakClientMockRecorder) VerifyToken(issuer, realmName, accessToken any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyToken", reflect.TypeOf((*KeycloakClient)(nil).VerifyToken), issuer, realmName, accessToken)
}

// IDRetriever is a mock of IDRetriever interface.
type IDRetriever struct {
	ctrl     *gomock.Controller
	recorder *IDRetrieverMockRecorder
	isgomock struct{}
}

// IDRetrieverMockRecorder is the mock recorder for IDRetriever.
type IDRetrieverMockRecorder struct {
	mock *IDRetriever
}

// NewIDRetriever creates a new mock instance.
func NewIDRetriever(ctrl *gomock.Controller) *IDRetriever {
	mock := &IDRetriever{ctrl: ctrl}
	mock.recorder = &IDRetrieverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *IDRetriever) EXPECT() *IDRetrieverMockRecorder {
	return m.recorder
}

// GetID mocks base method.
func (m *IDRetriever) GetID(accessToken, name string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetID", accessToken, name)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetID indicates an expected call of GetID.
func (mr *IDRetrieverMockRecorder) GetID(accessToken, name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetID", reflect.TypeOf((*IDRetriever)(nil).GetID), accessToken, name)
}

// AdminConfigurationRetriever is a mock of AdminConfigurationRetriever interface.
type AdminConfigurationRetriever struct {
	ctrl     *gomock.Controller
	recorder *AdminConfigurationRetrieverMockRecorder
	isgomock struct{}
}

// AdminConfigurationRetrieverMockRecorder is the mock recorder for AdminConfigurationRetriever.
type AdminConfigurationRetrieverMockRecorder struct {
	mock *AdminConfigurationRetriever
}

// NewAdminConfigurationRetriever creates a new mock instance.
func NewAdminConfigurationRetriever(ctrl *gomock.Controller) *AdminConfigurationRetriever {
	mock := &AdminConfigurationRetriever{ctrl: ctrl}
	mock.recorder = &AdminConfigurationRetrieverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *AdminConfigurationRetriever) EXPECT() *AdminConfigurationRetrieverMockRecorder {
	return m.recorder
}

// GetAdminConfiguration mocks base method.
func (m *AdminConfigurationRetriever) GetAdminConfiguration(ctx context.Context, realmID string) (configuration.RealmAdminConfiguration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAdminConfiguration", ctx, realmID)
	ret0, _ := ret[0].(configuration.RealmAdminConfiguration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAdminConfiguration indicates an expected call of GetAdminConfiguration.
func (mr *AdminConfigurationRetrieverMockRecorder) GetAdminConfiguration(ctx, realmID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAdminConfiguration", reflect.TypeOf((*AdminConfigurationRetriever)(nil).GetAdminConfiguration), ctx, realmID)
}
