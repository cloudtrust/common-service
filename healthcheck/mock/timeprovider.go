// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudtrust/common-service/v2/healthcheck (interfaces: TimeProvider)
//
// Generated by this command:
//
//	mockgen --build_flags=--mod=mod -destination=./mock/timeprovider.go -package=mock -mock_names=TimeProvider=TimeProvider github.com/cloudtrust/common-service/v2/healthcheck TimeProvider
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// TimeProvider is a mock of TimeProvider interface.
type TimeProvider struct {
	ctrl     *gomock.Controller
	recorder *TimeProviderMockRecorder
	isgomock struct{}
}

// TimeProviderMockRecorder is the mock recorder for TimeProvider.
type TimeProviderMockRecorder struct {
	mock *TimeProvider
}

// NewTimeProvider creates a new mock instance.
func NewTimeProvider(ctrl *gomock.Controller) *TimeProvider {
	mock := &TimeProvider{ctrl: ctrl}
	mock.recorder = &TimeProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *TimeProvider) EXPECT() *TimeProviderMockRecorder {
	return m.recorder
}

// Now mocks base method.
func (m *TimeProvider) Now() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Now")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// Now indicates an expected call of Now.
func (mr *TimeProviderMockRecorder) Now() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Now", reflect.TypeOf((*TimeProvider)(nil).Now))
}
