// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fb

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type CloudtrustEvent struct {
	_tab flatbuffers.Table
}

func GetRootAsCloudtrustEvent(buf []byte, offset flatbuffers.UOffsetT) *CloudtrustEvent {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &CloudtrustEvent{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsCloudtrustEvent(buf []byte, offset flatbuffers.UOffsetT) *CloudtrustEvent {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &CloudtrustEvent{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *CloudtrustEvent) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *CloudtrustEvent) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *CloudtrustEvent) Time() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *CloudtrustEvent) MutateTime(n int64) bool {
	return rcv._tab.MutateInt64Slot(4, n)
}

func (rcv *CloudtrustEvent) Origin() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *CloudtrustEvent) CtEventType() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *CloudtrustEvent) Details(obj *Tuple, j int) bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		x := rcv._tab.Vector(o)
		x += flatbuffers.UOffsetT(j) * 4
		x = rcv._tab.Indirect(x)
		obj.Init(rcv._tab.Bytes, x)
		return true
	}
	return false
}

func (rcv *CloudtrustEvent) DetailsLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func CloudtrustEventStart(builder *flatbuffers.Builder) {
	builder.StartObject(4)
}
func CloudtrustEventAddTime(builder *flatbuffers.Builder, time int64) {
	builder.PrependInt64Slot(0, time, 0)
}
func CloudtrustEventAddOrigin(builder *flatbuffers.Builder, origin flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(origin), 0)
}
func CloudtrustEventAddCtEventType(builder *flatbuffers.Builder, ctEventType flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(ctEventType), 0)
}
func CloudtrustEventAddDetails(builder *flatbuffers.Builder, details flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(details), 0)
}
func CloudtrustEventStartDetailsVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(4, numElems, 4)
}
func CloudtrustEventEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
